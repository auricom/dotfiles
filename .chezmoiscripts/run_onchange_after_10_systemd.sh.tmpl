#!/usr/bin/env bash

# Systemd services management script
# Manages user systemd services and quadlets

set -euo pipefail

# Source utility functions
source "{{ .chezmoi.homeDir }}/scripts/lib/chezmoi_utils.sh"

# Hash dependencies for change detection
{{- if .desktop }}
# resilio-sync hash: {{ include "private_dot_config/private_containers/systemd/resilio-sync.container.tmpl" | sha256sum }}
# tdarr-node hash: {{ include "private_dot_config/private_containers/systemd/tdarr-node.container.tmpl" | sha256sum }}
{{- end }}
# ublue_update_custom service: {{ include "private_dot_config/private_systemd/user/ublue-update-custom.service.tmpl" | sha256sum }}
# ublue_update_custom timer: {{ include "private_dot_config/private_systemd/user/ublue-update-custom.timer.tmpl" | sha256sum }}

main() {
    log_section "Managing systemd services and quadlets"

    # Reload systemd daemon to pick up new/changed units
    log_info "Reloading systemd user daemon"
    systemctl --user daemon-reload

    # Enable and start ublue-update-custom timer
    systemd_enable_start "ublue-update-custom.timer"

    {{- if .desktop }}
    # Enable container services if they exist
    enable_container_services
    {{- end }}

    log_info "Systemd configuration completed"
}

{{- if .desktop }}
enable_container_services() {
    local services=(
        "resilio-sync.service"
    )

    for service in "${services[@]}"; do
        if systemctl --user list-unit-files | grep -q "$service"; then
            log_info "Found container service: $service"
            systemd_enable_start "$service"
        else
            log_debug "Container service not found: $service"
        fi
    done
}
{{- end }}

# Run main function
main "$@"
