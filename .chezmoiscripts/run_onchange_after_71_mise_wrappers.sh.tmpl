{{- if .desktop -}}
#!/usr/bin/env bash

# Mise wrapper scripts installation
# Creates system-wide wrapper scripts that point to mise-managed tools
# Hash dependencies: {{ include ".chezmoidata/mise_wrappers.yaml" | sha256sum }}

set -euo pipefail

# Source utility functions
source "{{ .chezmoi.homeDir }}/scripts/lib/chezmoi_utils.sh"

# Global variables
readonly MISE_INSTALLS_DIR="{{ .chezmoi.homeDir }}/.local/share/mise/installs"
readonly WRAPPER_DIR="/usr/local/bin"

main() {
    log_section "Installing mise wrapper scripts"

    # Process each tool from the configuration
    {{- range .mise_wrappers }}
    process_tool "{{ . }}"
    {{- end }}

    log_info "Mise wrapper scripts installation completed"
}

process_tool() {
    local tool="$1"
    local tool_bin_dir="$MISE_INSTALLS_DIR/$tool/latest/bin"

    if [[ ! -d "$tool_bin_dir" ]]; then
        log_debug "$tool not found in mise installation: $tool_bin_dir"
        return 0
    fi

    log_info "Found mise-managed $tool installation"

    # Iterate through all binaries in the tool's bin directory
    for binary_path in "$tool_bin_dir"/*; do
        if [[ -f "$binary_path" && -x "$binary_path" ]]; then
            local binary_name
            binary_name=$(basename "$binary_path")
            create_wrapper "$binary_name" "$binary_path"
        fi
    done
}

create_wrapper() {
    local binary_name="$1"
    local binary_path="$2"
    local wrapper_path="$WRAPPER_DIR/$binary_name"

    if [[ -f "$wrapper_path" ]]; then
        log_debug "Wrapper already exists: $wrapper_path"
        return
    fi

    log_info "Creating wrapper script: $wrapper_path -> $binary_path"

    # Create the wrapper script file
    sudo touch "$wrapper_path"

    # Write the wrapper script content
    sudo tee "$wrapper_path" > /dev/null << EOF
#!/bin/bash
exec "$binary_path" "\$@"
EOF

    # Make it executable
    sudo chmod a+x "$wrapper_path"

    log_info "Wrapper script created successfully: $binary_name"
}

# Run main function
main "$@"
{{- end -}}
